% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cubes.R
\name{tiles_functions}
\alias{tiles_functions}
\alias{.verify_which}
\alias{tiles_which}
\alias{list_tiles}
\alias{.fetch_tiles}
\alias{tiles_sfc}
\alias{.tiles_to_sfc}
\title{Tiles functions}
\usage{
.verify_which(which, cube)

tiles_which(cube, prefix = NULL, geom = NULL)

list_tiles(cube)

.fetch_tiles(cube, which = NULL, cache = NULL, progress_bar = FALSE)

tiles_sfc(cube, which = NULL)

.tiles_to_sfc(cube, which = NULL)
}
\arguments{
\item{which}{A \code{logical} or \code{integer} vector indicating which
tile to be fetched. If \code{NULL} (default) all tiles are fetched.}

\item{cube}{A \code{EOCubes_cube} object.}

\item{prefix}{A \code{character} vector containing tile's name prefixes
to be filtered.}

\item{geom}{A \code{sfc}, a \code{sf} object, or a \code{character}
path to a shapefile to filter intersecting tiles.}

\item{cache}{A \code{logical} or \code{NULL} to enable (\code{TRUE}),
disable (\code{FALSE}), or proceed the default behavior of (\code{NULL})
the cache system.}

\item{progress_bar}{A \code{logical} value indicating to show or not a
progress bar while fetching tiles.}
}
\value{
Either a \code{logical} or \code{integer} vector.

A \code{logical} vector.

An \code{EOCubes_tilelist} object that lists all tiles from a cube.

An \code{EOCubes_tiles} object.

A \code{sfc} object from \code{sf} package.

A \code{sfc} object from \code{sf} package.
}
\description{
These functions provide operations to work with tiles
registered in cubes.
}
\details{
The function \code{.verify_which} is a internal function used to verify the
consistency of \code{which} parameter of some tiles functions.

The function \code{tiles_which} requires \code{sf} package to compute
intersection. It can be used in \code{which} parameter of functions
\code{\link{cube_filter}}, \code{\link{stacks}}, \code{\link{tiles_which}}

Fetching tiles can be an expensive task. You can filter tiles that intersects
your area of interest by providing \code{which} parameter.

The function \code{cubes_sfc} requires \code{sf} package.

The function \code{tiles_to_sfc} requires \code{sf} package.
}
\section{Functions}{
\itemize{
\item \code{.verify_which}: Verifies if which parameter is valid for a given
list of tiles.

\item \code{tiles_which}: Returns a \code{logical} vector indicating
selected tiles that satisfies filter.

\item \code{list_tiles}: Lists all registered tiles in a cube.

\item \code{.fetch_tiles}: Fetches tiles in a cube.

\item \code{tiles_sfc}: Returns all tiles extents in a \code{sfc} object.

\item \code{.tiles_to_sfc}: Converts tiles extents to a \code{sfc} object.
}}

\examples{
x <- repository("localhost")
cub1 <- cube("MOD13Q1/006", x)
tiles_index <- tiles_which(cub1, "h13v10")   # select 'h13v10' tile

# required by sf package
if (require("tibble") && require("sf")) {

   tiles_sfc(cub1, which = tiles_index)
   file <- system.file("shape/example.shp", package = "EOCubes")
   tiles_index <- tiles_which(cub1, geom = file)   # select all tiles that intersect shapefile
   tiles_sfc(cub1, which = tiles_index)
}

}
\seealso{
\code{\link{repository}}, \code{\link{cube}}, \code{\link{cube_filter}}
}
