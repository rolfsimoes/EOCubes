% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cache.R
\name{cache_functions}
\alias{cache_functions}
\alias{load_cache}
\alias{save_cache}
\alias{cached_entries}
\alias{cache_cube}
\alias{flush_cache}
\alias{is_caching}
\title{Caching functions}
\usage{
load_cache()

save_cache()

cached_entries()

cache_cube(cube, which = NULL)

flush_cache(cube = NULL, which = NULL)

is_caching(x)
}
\arguments{
\item{cube}{A \code{EOCubes_cube} object.}

\item{which}{A \code{logical} or \code{integer} vector indicating which
tile to be fetched. If \code{NULL} (default) all tiles are fetched.}

\item{x}{Either a \code{EOCubes_repository} or \code{EOCubes_cube} object.}
}
\value{
None

None

A \code{character} vector.

None

None

A \code{logical} value.
}
\description{
These functions provides basic procedures to work with the
\code{EOCubes} cache system.
}
\details{
The \code{load_cache} function loads all cached data from
\code{EOCubes:::.local_base()} directory.

The \code{save_cache} function saves all cached data into
\code{EOCubes:::.local_base()} directory.

The function \code{cached_entries} shows all entries (JSON locations)
cached.

The function \code{cache_cube} caches and persists all cube tiles contents.
Fetching tiles can be an expensive task. You can filter tiles that intersects
your area of interest by providing \code{which} parameter.

The function \code{cache_flush} discards all cached tiles of
a cube. If no cube is informed (default), all entries are flushed.
To persist the flush, you must call explicitly \code{save_cache} function.
}
\section{Functions}{
\itemize{
\item \code{load_cache}: Load all cached data.

\item \code{save_cache}: Persists all cached data.

\item \code{cached_entries}: Lists all cached entries.

\item \code{cache_cube}: Fetches all tiles in a cube and cache its
contents.

\item \code{flush_cache}: Discards all cached tiles in a cube.

\item \code{is_caching}: Check if a given object (either
\code{EOCubes_repository} or \code{EOCubes_cube}) has cache system enabled.
}}

\examples{
# disable cache system for subsequent fetches on 'x' repository
x <- repository("localhost", FALSE)
# by default cache system is enabled
x <- repository("localhost")
# cache all cube tiles contents
cache_cube(cube("MOD13Q1/006", x))
# persists cached data
save_cache()
}
\seealso{
\code{\link{repository}}
}
